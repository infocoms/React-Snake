{"version":3,"sources":["Snake.js","Food.js","Wall.js","Boost.js","Angel.js","App.js","serviceWorker.js","index.js"],"names":["Snake","props","snakeBlocks","map","block","i","style","left","top","className","key","high","timer","status","level","godmode","currentspeed","getRandomCoordinates","Math","floor","random","initialState","wall1","wall2","wall3","wall4","wall5","wall6","wall7","angelB","score","boost2","boost","food","speed","direction","App","onKeyDown","e","window","event","keyCode","setState","moveSnake","state","head","length","push","shift","clearInterval","this","interval","setInterval","document","onkeydown","increaseScore","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","checkIfHit","onGameOver","snake","pop","forEach","wallHit","angel","newState","enlargeSnake","increaseSpeed","increaseLevel","boostHit","godMode","newSnake","unshift","setTimeout","newMode","newCoor","boostUp","newCoorWall","src","alt","Food","Angel","Boost","Wall","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6015259.chunk.js","sourcesContent":["import React from \"react\";\nfunction Snake(props) {\n    return (\n        <>\n            {props.snakeBlocks.map((block, i) => {\n                const style = {\n                    left: `${block[0]}%`,\n                    top: `${block[1]}%`\n                };\n                return <div className=\"snake block\" key={i} style={style}/>;\n            })}\n        </>\n    );\n}\nexport default Snake;\n","import React from \"react\";\n\nexport default props => {\n    const style = {\n        left: `${props.block[0]}%`,\n        top: `${props.block[1]}%`\n    };\n    return <div className=\"food block\" style={style}/>;\n};\n","import React from \"react\";\n\nexport default props => {\n    const style = {\n        left: `${props.block[0]}%`,\n        top: `${props.block[1]}%`\n    };\n    return <div className=\"wall block\" style={style}/>;\n};\n","import React from \"react\";\n\nexport default props => {\n    const style = {\n        left: `${props.block[0]}%`,\n        top: `${props.block[1]}%`\n    };\n    return <div className=\"boost block\" style={style}/>;\n};\n","import React from \"react\";\n\nexport default props => {\n    const style = {\n        left: `${props.block[0]}%`,\n        top: `${props.block[1]}%`\n    };\n    return <div className=\"angel block\" style={style}/>;\n};\n","import React, {Component} from \"react\";\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\nimport Wall from \"./Wall\";\nimport Boost from \"./Boost\";\nimport Angel from \"./Angel\";\n\nlet high = 0;\nlet timer = \"God Mode Timer\";\nlet status = \"Let's Play\";\nlet level = 0;\nlet godmode = 0;\nlet currentspeed = \"\";\n\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y];\n};\n\nconst initialState = {\n    wall1: getRandomCoordinates(),\n    wall2: getRandomCoordinates(),\n    wall3: getRandomCoordinates(),\n    wall4: getRandomCoordinates(),\n    wall5: getRandomCoordinates(),\n    wall6: getRandomCoordinates(),\n    wall7: getRandomCoordinates(),\n    angelB: [139, 5],\n    score: 0,\n    boost2: getRandomCoordinates(),\n    boost: getRandomCoordinates(),\n    food: getRandomCoordinates(),\n    speed: 100,\n    direction: \"RIGHT\",\n    snakeBlocks: [[2, 2], [4, 2], [6, 2]]\n};\n\nclass App extends Component {\n    constructor(props) {\n        super();\n        this.state = initialState;\n    }\n\n    speed() {\n        clearInterval(this.interval);\n        this.interval = setInterval(this.moveSnake, this.state.speed);\n    }\n\n    componentDidMount() {\n        this.speed();\n        document.onkeydown = this.onKeyDown;\n    }\n\n\n//GOD MODE FUNCTION\n    /*checklevelforGodMode(){\n        if (level === 1){\n            this.state.angelB = [60,60];\n\n        }\n    }*/\n\n    componentDidUpdate() {\n        this.increaseScore();\n        this.checkIfOutOfBorders();\n        this.checkIfCollapsed();\n        this.checkIfEat();\n        this.checkIfHit();\n        this.speed();\n    }\n\n\n    onKeyDown = e => {\n        e = e || window.event;\n        switch (e.keyCode) {\n            case 38:\n                this.setState({direction: \"UP\"});\n                break;\n            case 40:\n                this.setState({direction: \"DOWN\"});\n                break;\n            case 37:\n                this.setState({direction: \"LEFT\"});\n                break;\n            case 39:\n                this.setState({direction: \"RIGHT\"});\n                break;\n            case 80:\n                this.setState({speed: 10});\n\n                break;\n            default:\n                break;\n        }\n    };\n\n\n    moveSnake = () => {\n        let block = [...this.state.snakeBlocks];\n        let head = block[block.length - 1];\n\n        switch (this.state.direction) {\n            case \"RIGHT\":\n                head = [head[0] + 2, head[1]];\n                break;\n            case \"LEFT\":\n                head = [head[0] - 2, head[1]];\n                break;\n            case \"DOWN\":\n                head = [head[0], head[1] + 2];\n                break;\n            case \"UP\":\n                head = [head[0], head[1] - 2];\n                break;\n            default:\n                break;\n        }\n        block.push(head);\n        block.shift();\n        this.setState({\n            snakeBlocks: block\n        });\n    };\n\n    checkIfOutOfBorders() {\n        let head = this.state.snakeBlocks[this.state.snakeBlocks.length - 1];\n        if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n            this.onGameOver();\n        }\n    }\n\n    checkIfCollapsed() {\n        let snake = [...this.state.snakeBlocks];\n        let head = snake[snake.length - 1];\n        snake.pop();\n        snake.forEach(block => {\n            if (head[0] === block[0] && head[1] === block[1]) {\n                if (godmode === 1){\n                    //special event when angel form\n                }else {\n                    this.onGameOver();\n                }\n\n            }\n        });\n    }\n\n    checkIfHit(){\n        let head = this.state.snakeBlocks[this.state.snakeBlocks.length - 1];\n        let wall1 = this.state.wall1;\n        let wall2 = this.state.wall2;\n        let wall3 = this.state.wall3;\n        let wall4 = this.state.wall4;\n        let wall5 = this.state.wall5;\n        let wall6 = this.state.wall6;\n        let wall7 = this.state.wall7;\n\n        if (head[0] === wall1[0] && head[1] === wall1[1]) {\n            this.wallHit();\n        }\n\n        if (head[0] === wall2[0] && head[1] === wall2[1]){\n            this.wallHit();\n        }\n\n        if (head[0] === wall3[0] && head[1] === wall3[1]){\n            this.wallHit();\n        }\n        if (head[0] === wall4[0] && head[1] === wall4[1]){\n            this.wallHit();\n        }\n        if (head[0] === wall5[0] && head[1] === wall5[1]){\n            this.wallHit();\n        }\n        if (head[0] === wall6[0] && head[1] === wall6[1]){\n            this.wallHit();\n        }\n        if (head[0] === wall7[0] && head[1] === wall7[1]){\n            this.wallHit();\n        }\n\n    }\n\n    checkIfEat() {\n        let head = this.state.snakeBlocks[this.state.snakeBlocks.length - 1];\n        let food = this.state.food;\n        let angel = this.state.angelB;\n        let boost = this.state.boost;\n        let boost2 = this.state.boost2;\n        if (head[0] === food[0] && head[1] === food[1] ) {\n            let newState = {...this.state};\n            newState.food = getRandomCoordinates();\n            newState.snakeBlocks = this.enlargeSnake();\n            newState.speed = this.increaseSpeed();\n            newState.score = this.increaseScore();\n            this.setState(newState);\n            this.speed();\n            this.increaseLevel();\n        }\n        if (head[0] === boost[0] && head[1] === boost[1] ) {\n           this.boostHit();\n        }\n        if (head[0] === boost2[0] && head[1] === boost2[1] ) {\n            this.boostHit();\n        }\n        if (head[0] === angel[0] && head[1] === angel[1] ) {\n            this.godMode();\n        }\n    }\n\n\n    enlargeSnake() {\n        let newSnake = [...this.state.snakeBlocks];\n        newSnake.unshift([]);\n        return newSnake;\n\n    }\n\n   increaseLevel() {\n        if (this.state.score === 3 || this.state.score === 9 || this.state.score === 29 || this.state.score === 39 || this.state.score === 49 || this.state.score === 59) {\n            level = level + 1;\n            status = \". . lvl up! . .\";\n            if (this.state.speed < 40){\n                this.setState({speed: 30})\n            }\n            else {\n                this.setState({speed: this.state.speed - 10});\n                setTimeout(()=>{this.state.angelB = [50,50]; },2000);\n                setTimeout(()=>{this.state.angelB = [139, 5]; },10000);\n            }\n        }\n        else {\n\n        }\n    }\n\n    increaseSpeed() {\n        if (this.state.speed > 20) {\n            status = \"+ 1\";\n            setTimeout(()=>{status = \"\"; },2000);\n            return this.state.speed;\n        } else {\n\n            return this.state.speed;\n        }\n    }\n\n\n    godMode(){\n        let newMode = {...this.state};\n        status = \"GOD MODE ACTIVATED 20s\";\n        setTimeout(()=>{timer = \"20\"; },1000);\n        setTimeout(()=>{timer = \"19\"; },2000);\n        setTimeout(()=>{timer = \"18\"; },3000);\n        setTimeout(()=>{timer = \"17\"; },4000);\n        setTimeout(()=>{timer = \"16\"; },5000);\n        setTimeout(()=>{timer = \"15\"; },6000);\n        setTimeout(()=>{timer = \"14\"; },7000);\n        setTimeout(()=>{timer = \"13\"; },8000);\n        setTimeout(()=>{timer = \"12\"; },9000);\n        setTimeout(()=>{timer = \"11\"; },10000);\n        setTimeout(()=>{timer = \"10\"; },11000);\n        setTimeout(()=>{timer = \"9\"; },12000);\n        setTimeout(()=>{timer = \"8\"; },13000);\n        setTimeout(()=>{timer = \"7\"; },14000);\n        setTimeout(()=>{timer = \"6\"; },15000);\n        setTimeout(()=>{timer = \"5\"; },16000);\n        setTimeout(()=>{timer = \"4\"; },17000);\n        setTimeout(()=>{timer = \"3\"; },18000);\n        setTimeout(()=>{timer = \"2\"; },19000);\n        setTimeout(()=>{timer = \"1\"; },20000);\n        setTimeout(()=>{timer = \"God Mode Timer\"; },21000);\n        setTimeout(()=>{status = \"\"; },2000);\n\n        newMode.angelB = [139, 5];\n        this.setState(newMode);\n        godmode = 1;\n        setTimeout(()=>{godmode = 0; },20000);\n    }\n\n    boostHit(){\n        let newCoor = {...this.state};\n        newCoor.boost = getRandomCoordinates();\n        newCoor.boost2 = getRandomCoordinates();\n        newCoor.speed = this.boostUp();\n        this.setState(newCoor);\n        this.speed();\n    }\n\n    wallHit(){\n        this.onGameOver();\n        let newCoorWall = {...this.state};\n        newCoorWall.wall1 = getRandomCoordinates();\n        newCoorWall.wall2 = getRandomCoordinates();\n        newCoorWall.wall3 = getRandomCoordinates();\n        newCoorWall.wall4 = getRandomCoordinates();\n        newCoorWall.wall5 = getRandomCoordinates();\n        newCoorWall.wall6 = getRandomCoordinates();\n        newCoorWall.wall7 = getRandomCoordinates();\n        this.setState(newCoorWall);\n        this.onGameOver();\n        //game over function goes here\n    }\n\n    boostUp() {\n        if (this.state.speed <= 30){\n            currentspeed = this.state.speed;\n            status = \"Yi HA!!\";\n            setTimeout(()=>{status = \"\"; },2000);\n            setTimeout(()=>{this.state.speed = currentspeed; },10000);\n            return this.state.speed = 30;\n\n        }else {\n            currentspeed = this.state.speed;\n            status = \"Yi HA!!\";\n            setTimeout(()=>{status = \"\"; },2000);\n            setTimeout(()=>{this.state.speed = currentspeed; },10000);\n            return this.state.speed = 30;\n        }\n\n\n    }\n\n\n    increaseScore() {\n        return this.state.score + 1;\n    }\n\n\n\n    onGameOver() {\n        //alert(`Game Over. Snake length is ${this.state.snakeBlocks.length}`);\n        if (high < this.state.score){\n            high = this.state.score;\n        }\n        timer = \"God Mode Timer\";\n        godmode = 0;\n        level = 0;\n        status = \"Game Over!\";\n        setTimeout(()=>{status = \"Lets try that again?\"; },2000);\n        setTimeout(()=>{status = \"\"; },3000);\n        this.setState(initialState);\n    }\n\n\n    render() {\n        return (\n            <fragment>\n                <div className=\"title\">\n                    <h1 className=\"GameTitle\">NEON SNAKE ™</h1>\n                    <p>Score: <b className=\"UI\">{this.state.score}</b>\n                        Level: <b className=\"UI\">{level}</b>\n                        Length: <b className=\"UI\">{this.state.snakeBlocks.length}</b>\n                        High Score: <b className=\"UI\">{high}</b>\n                    </p>\n                </div>\n                <div className=\"GameIndex\">\n                    <h1 className=\"IndexTitle\">Guide</h1>\n\n                    <p className=\"space\"><img src=\"https://image.flaticon.com/icons/png/512/771/771266.png\" className=\"guideicon\" alt=\"icon\"/> Food</p>\n                    <p className=\"space\"><img src=\"https://image.flaticon.com/icons/png/512/1069/1069280.png\" className=\"guideicon\" alt=\"icon\"/> Boost</p>\n                    <p className=\"space\"><img src=\"https://image.flaticon.com/icons/png/512/2327/2327312.png\" className=\"guideicon\" alt=\"icon\"/> God Mode</p>\n                    <p className=\"space\"><img src=\"https://image.flaticon.com/icons/svg/359/359399.svg\" className=\"guideicon\" alt=\"icon\"/> Wall</p>\n\n                </div>\n                <div className=\"game-area\">\n                    <Snake snakeBlocks={this.state.snakeBlocks}/>\n                    <Food block={this.state.food}/>\n                    <Angel block={this.state.angelB}/>\n                    <Boost block={this.state.boost}/>\n                    <Boost block={this.state.boost2}/>\n                    <Wall block={this.state.wall1}/>\n                    <Wall block={this.state.wall2}/>\n                    <Wall block={this.state.wall3}/>\n                    <Wall block={this.state.wall4}/>\n                    <Wall block={this.state.wall5}/>\n                    <Wall block={this.state.wall6}/>\n                    <Wall block={this.state.wall7}/>\n                    <h1 className=\"Timer\">{timer}</h1>\n                    <h2 className=\"Info\">{status}</h2>\n                </div>\n            </fragment>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}