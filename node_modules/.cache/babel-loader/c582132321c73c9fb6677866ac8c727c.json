{"ast":null,"code":"var _jsxFileName = \"/home/becode/Desktop/snake-game/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: getRandomCoordinates(),\n      direction: 'RIGHT',\n      snakeDots: [[0, 0], [2, 0]]\n    };\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this];\n    };\n  }\n\n  componentDidMount() {\n    document.onkeydown = this.onKeyDown;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/becode/Desktop/snake-game/my-app/src/App.js"],"names":["React","Component","Snake","Food","getRandomCoordinates","min","max","x","Math","floor","random","y","App","state","food","direction","snakeDots","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","componentDidMount","document","onkeydown","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACD,IAAI,CAACE,MAAL,MAAeJ,GAAG,GAACD,GAAJ,GAAQ,CAAvB,IAA0BA,GAA3B,IAAgC,CAA3C,IAA8C,CAAtD;AACA,MAAIM,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAW,CAACD,IAAI,CAACE,MAAL,MAAeJ,GAAG,GAACD,GAAJ,GAAQ,CAAvB,IAA0BA,GAA3B,IAAgC,CAA3C,IAA8C,CAAtD;AACA,SAAO,CAACE,CAAD,EAAGI,CAAH,CAAP;AACH,CAND;;AAUA,MAAMC,GAAN,SAAkBX,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAEvBY,KAFuB,GAEf;AACJC,MAAAA,IAAI,EAAEV,oBAAoB,EADtB;AAEJW,MAAAA,SAAS,EAAE,OAFP;AAGHC,MAAAA,SAAS,EAAC,CACN,CAAC,CAAD,EAAG,CAAH,CADM,EAEN,CAAC,CAAD,EAAG,CAAH,CAFM;AAHP,KAFe;;AAAA,SAgBvBC,SAhBuB,GAgBVC,CAAD,IAAO;AACfA,MAAAA,CAAC,GAAIA,CAAC,IAAIC,MAAM,CAACC,KAAjB;;AACA,cAAQF,CAAC,CAACG,OAAV;AACI,aAAK,EAAL;AACI,eAAKC,QAAL,CAAc;AAACP,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACJ,aAAK,EAAL;AACI,eAAKO,QAAL,CAAc;AAACP,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACJ,aAAK,EAAL;AACI,eAAKO,QAAL,CAAc;AAACP,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;;AACJ,aAAK,EAAL;AACI,eAAKO,QAAL,CAAc;AAACP,YAAAA,SAAS,EAAE;AAAZ,WAAd;AACA;AAZR;AAeH,KAjCsB;;AAAA,SAoCvBQ,SApCuB,GAoCX,MAAM;AACd,UAAIC,IAAI,GAAG,CAAC,GAAG,IAAJ,CAAX;AACP,KAtC0B;AAAA;;AAYvBC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,SAAT,GAAqB,KAAKV,SAA1B;AACH;;AA2BDW,EAAAA,MAAM,GAAG;AACT,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,KAAKf,KAAL,CAAWG,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ;AAOD;;AAjDwB;;AAoD3B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x,y]\n}\n\n\n\nclass App extends Component{\n\n    state = {\n        food: getRandomCoordinates(),\n        direction: 'RIGHT',\n         snakeDots:[\n             [0,0],\n             [2,0]\n         ]\n    }\n\n\n    componentDidMount() {\n        document.onkeydown = this.onKeyDown;\n    }\n\n    onKeyDown = (e) => {\n        e =  e || window.event;\n        switch (e.keyCode) {\n            case 38:\n                this.setState({direction: 'UP'});\n                break;\n            case 40:\n                this.setState({direction: 'DOWN'});\n                break;\n            case 37:\n                this.setState({direction: 'LEFT'});\n                break;\n            case 39:\n                this.setState({direction: 'RIGHT'});\n                break;\n\n        }\n    }\n\n\n    moveSnake = () => {\n        let dots = [...this]\n}\n\n\n    render() {\n    return (\n        <div className=\"game-area\">\n          <Snake snakeDots={this.state.snakeDots}/>\n          <Food dot={this.state.food}/>\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}