{"ast":null,"code":"var _jsxFileName = \"/home/becode/Desktop/snake-game/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  return [x, y];\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      food: getRandomCoordinates(),\n      speed: 200,\n      direction: 'RIGHT',\n      snakeDots: [[0, 0], [2, 0]]\n    };\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 40:\n          this.setState({\n            direction: 'DOWN'\n          });\n          break;\n\n        case 37:\n          this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 39:\n          this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 2, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 2, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 2];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 2];\n          break;\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Food, {\n      dot: this.state.food,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/becode/Desktop/snake-game/my-app/src/App.js"],"names":["React","Component","Snake","Food","getRandomCoordinates","min","max","x","Math","floor","random","y","App","state","food","speed","direction","snakeDots","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","push","shift","componentDidMount","setInterval","document","onkeydown","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\n\nconst getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n    return [x, y]\n}\n\n\nclass App extends Component {\n\n    state = {\n        food: getRandomCoordinates(),\n        speed: 200,\n        direction: 'RIGHT',\n        snakeDots: [\n            [0, 0],\n            [2, 0]\n        ]\n    }\n\n\n    componentDidMount() {\n        setInterval(this.moveSnake, this.state.speed )\n        document.onkeydown = this.onKeyDown;\n    }\n\n    onKeyDown = (e) => {\n        e = e || window.event;\n        switch (e.keyCode) {\n            case 38:\n                this.setState({direction: 'UP'});\n                break;\n            case 40:\n                this.setState({direction: 'DOWN'});\n                break;\n            case 37:\n                this.setState({direction: 'LEFT'});\n                break;\n            case 39:\n                this.setState({direction: 'RIGHT'});\n                break;\n\n        }\n    }\n\n\n    moveSnake = () => {\n        let dots = [...this.state.snakeDots];\n        let head = dots[dots.length - 1];\n\n        switch (this.state.direction) {\n            case 'RIGHT':\n                head = [head[0] + 2, head[1]];\n                break;\n\n            case 'LEFT':\n                head = [head[0] - 2, head[1]];\n                break;\n            case 'DOWN':\n                head = [head[0], head[1] + 2];\n                break;\n            case 'UP':\n                head = [head[0], head[1] - 2];\n                break;\n        }\n        dots.push(head);\n        dots.shift();\n        this.setState({\n            snakeDots: dots\n        })\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"game-area\">\n                <Snake snakeDots={this.state.snakeDots}/>\n                <Food dot={this.state.food}/>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}